import java.text.SimpleDateFormat

plugins {
    id 'base'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'io.codearte.nexus-staging' version '0.21.1'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'com.github.hierynomus.license' version '0.15.0' apply false
    id 'de.marcphilipp.nexus-publish' version '0.4.0' apply false
}

ext {
    fxyz_sampler_mainClass   = 'org.fxyz3d.samples.Launcher'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.openjfx.javafxplugin'
    apply plugin: 'com.github.hierynomus.license'

    java {
        modularity.inferModulePath.set(true)
    }
    
    if (project.name != 'FXyz-Samples') {
        apply plugin: 'java-library'
        apply plugin: 'maven'
        apply from: "$rootDir/gradle/publishing.gradle"
    } else {
        javadoc {
            enabled(false)
        }
    }

    sourceCompatibility = '1.9'
    targetCompatibility = '1.9'

    repositories {
        mavenCentral()
    }

    dependencies {     
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
        testImplementation 'org.hamcrest:hamcrest:2.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }

    javafx {
        version = javafx_version
        modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing' ]
    }

    javadoc {
        options.addBooleanOption("Xdoclint:none").setValue(true);
        options.addBooleanOption("javafx").setValue(true);
    }

    eclipse {
        classpath {
            file {
                whenMerged {
                    entries.findAll { it.kind == 'src' || it.kind == 'lib' }.each {
                        it.entryAttributes['module'] = 'true'
                    }
                }
            }
        }
    }

    license {
        header = rootProject.file('fxyz-license.txt')
        strictCheck = true
        ignoreFailures = false
        skipExistingHeaders = true
        mapping {
            java   = 'SLASHSTAR_STYLE'
            groovy = 'SLASHSTAR_STYLE'
            fxml   = 'XML_STYLE'
        }

        ext.title           = 'F(X)yz'
        ext.yearCurrent     = new SimpleDateFormat("yyyy").format(new Date())
        ext.yearSince       = '2013'

        excludes(['**/*.txt', '**/*.html', '**/*.fxml', '**/*.css', '**/*.obj', '**/*.mtl', '**/*.ma', '**/*.png', '**/*.gif', '**/*.jpg'])
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "failed"
            exceptionFormat "full"
        }
    }
}